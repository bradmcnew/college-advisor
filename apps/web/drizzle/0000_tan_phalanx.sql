CREATE TABLE "college-advice_account" (
	"user_id" varchar(255) NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"provider_account_id" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "college-advice_account_provider_provider_account_id_pk" PRIMARY KEY("provider","provider_account_id")
);
--> statement-breakpoint
CREATE TABLE "college-advice_availability" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"mentor_id" varchar(255) NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL,
	CONSTRAINT "time_range_check" CHECK ("college-advice_availability"."end_time" > "college-advice_availability"."start_time")
);
--> statement-breakpoint
CREATE TABLE "college-advice_calendly_tokens" (
	"id" serial PRIMARY KEY NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"access_token" text NOT NULL,
	"refresh_token" text NOT NULL,
	"expires_at" timestamp NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "college-advice_major" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "college-advice_major_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(255),
	"updated_at" timestamp with time zone,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"deleted_at" timestamp with time zone,
	CONSTRAINT "college-advice_major_name_unique" UNIQUE("name")
);
--> statement-breakpoint
CREATE TABLE "college-advice_meeting" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "college-advice_meeting_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"mentor_id" varchar(255) NOT NULL,
	"mentee_id" varchar(255),
	"start_time" timestamp NOT NULL,
	"end_time" timestamp NOT NULL,
	"meeting_url" varchar(512) NOT NULL,
	"status" varchar(50) DEFAULT 'scheduled' NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL,
	CONSTRAINT "status_check" CHECK ("college-advice_meeting"."status" IN ('scheduled', 'completed', 'canceled'))
);
--> statement-breakpoint
CREATE TABLE "college-advice_mentor_review" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "college-advice_mentor_review_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"mentor_id" varchar(255) NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"rating" integer NOT NULL,
	"review" varchar(1000),
	"updated_at" timestamp with time zone,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"deleted_at" timestamp with time zone,
	CONSTRAINT "rating_check" CHECK ("college-advice_mentor_review"."rating" >= 1 AND "college-advice_mentor_review"."rating" <= 5)
);
--> statement-breakpoint
CREATE TABLE "college-advice_post" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "college-advice_post_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256),
	"description" text,
	"created_by" varchar(255) NOT NULL,
	"updated_at" timestamp with time zone,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"deleted_at" timestamp with time zone,
	CONSTRAINT "college-advice_post_created_by_unique" UNIQUE("created_by")
);
--> statement-breakpoint
CREATE TABLE "college-advice_school" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "college-advice_school_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(255),
	"location" varchar(255),
	"image" varchar(255),
	"updated_at" timestamp with time zone,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"deleted_at" timestamp with time zone,
	CONSTRAINT "college-advice_school_name_unique" UNIQUE("name")
);
--> statement-breakpoint
CREATE TABLE "college-advice_session" (
	"session_token" varchar(255) PRIMARY KEY NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE "college-advice_user_major" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "college-advice_user_major_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"user_id" varchar(255) NOT NULL,
	"major_id" integer NOT NULL,
	"updated_at" timestamp with time zone,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"deleted_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "college-advice_user_profile" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "college-advice_user_profile_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"user_id" varchar(255) NOT NULL,
	"bio" varchar(1000),
	"school_year" varchar(255) NOT NULL,
	"graduation_year" integer NOT NULL,
	"edu_email" varchar(255),
	"is_edu_verified" boolean DEFAULT false NOT NULL,
	"is_mentor" boolean DEFAULT false NOT NULL,
	"updated_at" timestamp with time zone,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"deleted_at" timestamp with time zone,
	CONSTRAINT "college-advice_user_profile_user_id_unique" UNIQUE("user_id"),
	CONSTRAINT "college-advice_user_profile_edu_email_unique" UNIQUE("edu_email"),
	CONSTRAINT "grad_year_check" CHECK ("college-advice_user_profile"."graduation_year" >= $1)
);
--> statement-breakpoint
CREATE TABLE "college-advice_user_school" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "college-advice_user_school_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"user_id" varchar(255) NOT NULL,
	"school_id" integer NOT NULL,
	"updated_at" timestamp with time zone,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"deleted_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "college-advice_user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"name" varchar(255),
	"email" varchar(255),
	"email_verified" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"image" varchar(255),
	CONSTRAINT "college-advice_user_id_unique" UNIQUE("id"),
	CONSTRAINT "college-advice_user_email_unique" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE "college-advice_verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "college-advice_verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);
--> statement-breakpoint
ALTER TABLE "college-advice_account" ADD CONSTRAINT "college-advice_account_user_id_college-advice_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_availability" ADD CONSTRAINT "college-advice_availability_mentor_id_college-advice_user_id_fk" FOREIGN KEY ("mentor_id") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_calendly_tokens" ADD CONSTRAINT "college-advice_calendly_tokens_user_id_college-advice_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."college-advice_user"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_meeting" ADD CONSTRAINT "college-advice_meeting_mentor_id_college-advice_user_id_fk" FOREIGN KEY ("mentor_id") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_meeting" ADD CONSTRAINT "college-advice_meeting_mentee_id_college-advice_user_id_fk" FOREIGN KEY ("mentee_id") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_mentor_review" ADD CONSTRAINT "college-advice_mentor_review_mentor_id_college-advice_user_id_fk" FOREIGN KEY ("mentor_id") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_mentor_review" ADD CONSTRAINT "college-advice_mentor_review_user_id_college-advice_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_post" ADD CONSTRAINT "college-advice_post_created_by_college-advice_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_session" ADD CONSTRAINT "college-advice_session_user_id_college-advice_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_user_major" ADD CONSTRAINT "college-advice_user_major_user_id_college-advice_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_user_major" ADD CONSTRAINT "college-advice_user_major_major_id_college-advice_major_id_fk" FOREIGN KEY ("major_id") REFERENCES "public"."college-advice_major"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_user_profile" ADD CONSTRAINT "college-advice_user_profile_user_id_college-advice_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_user_school" ADD CONSTRAINT "college-advice_user_school_user_id_college-advice_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."college-advice_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "college-advice_user_school" ADD CONSTRAINT "college-advice_user_school_school_id_college-advice_school_id_fk" FOREIGN KEY ("school_id") REFERENCES "public"."college-advice_school"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "account_user_id_idx" ON "college-advice_account" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "mentor_mentee_idx" ON "college-advice_meeting" USING btree ("mentor_id","mentee_id");--> statement-breakpoint
CREATE INDEX "start_time_idx" ON "college-advice_meeting" USING btree ("start_time");--> statement-breakpoint
CREATE INDEX "created_by_idx" ON "college-advice_post" USING btree ("created_by");--> statement-breakpoint
CREATE INDEX "name_idx" ON "college-advice_post" USING btree ("name");--> statement-breakpoint
CREATE INDEX "created_at_created_by_idx" ON "college-advice_post" USING btree ("created_at","created_by");--> statement-breakpoint
CREATE INDEX "posts_created_at_partial_idx" ON "college-advice_post" USING btree ("created_at") WHERE deleted_at IS NULL;--> statement-breakpoint
CREATE INDEX "session_user_id_idx" ON "college-advice_session" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "major_user_compound_idx" ON "college-advice_user_major" USING btree ("major_id","user_id");--> statement-breakpoint
CREATE INDEX "graduation_school_year_idx" ON "college-advice_user_profile" USING btree ("graduation_year","school_year");--> statement-breakpoint
CREATE INDEX "user_profiles_compound_idx" ON "college-advice_user_profile" USING btree ("user_id","graduation_year","school_year");--> statement-breakpoint
CREATE INDEX "user_profiles_grad_year_partial_idx" ON "college-advice_user_profile" USING btree ("graduation_year") WHERE deleted_at IS NULL;--> statement-breakpoint
CREATE INDEX "edu_email_user_id_idx" ON "college-advice_user_profile" USING btree ("edu_email","user_id");--> statement-breakpoint
CREATE INDEX "user_school_idx" ON "college-advice_user_school" USING btree ("user_id","school_id");--> statement-breakpoint
CREATE INDEX "school_user_compound_idx" ON "college-advice_user_school" USING btree ("school_id","user_id");